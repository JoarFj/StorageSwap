apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-space-api
  labels:
    app: storage-space-api
spec:
  replicas: 3  # Start with 3 replicas for high availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1  # Maximum number of pods that can be created over the desired number
      maxUnavailable: 0  # Number of pods that can be unavailable during the update
  selector:
    matchLabels:
      app: storage-space-api
  template:
    metadata:
      labels:
        app: storage-space-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "5000"
    spec:
      containers:
      - name: storage-space-api
        image: ${DOCKER_REGISTRY}/storage-space-api:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: storage-space-secrets
              key: database-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: storage-space-secrets
              key: secret-key
        - name: PORT
          value: "5000"
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.5"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: storage-space-api
  labels:
    app: storage-space-api
spec:
  selector:
    app: storage-space-api
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storage-space-api-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  tls:
  - hosts:
    - api.storage-space.example.com
    secretName: storage-space-tls
  rules:
  - host: api.storage-space.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: storage-space-api
            port:
              number: 80