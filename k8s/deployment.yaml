apiVersion: v1
kind: Namespace
metadata:
  name: storage-space
---
apiVersion: v1
kind: Secret
metadata:
  name: storage-space-secrets
  namespace: storage-space
type: Opaque
# These will be populated via kubectl create/replace command
# with real values from CI/CD pipeline or manually
data:
  DATABASE_URL: "" # Base64 encoded value
  SECRET_KEY: ""  # Base64 encoded value
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-space-api
  namespace: storage-space
  labels:
    app: storage-space-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: storage-space-api
  template:
    metadata:
      labels:
        app: storage-space-api
    spec:
      containers:
      - name: api
        image: ${DOCKERHUB_USERNAME}/storage-space:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: storage-space-secrets
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: storage-space-secrets
              key: SECRET_KEY
        - name: ENVIRONMENT
          value: "production"
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "500m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: storage-space-api
  namespace: storage-space
spec:
  selector:
    app: storage-space-api
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storage-space-ingress
  namespace: storage-space
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - ${YOUR_DOMAIN_HERE}
    secretName: storage-space-tls
  rules:
  - host: ${YOUR_DOMAIN_HERE}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: storage-space-api
            port:
              number: 80
---
# Horizontal Pod Autoscaler for dynamic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: storage-space-hpa
  namespace: storage-space
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: storage-space-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80